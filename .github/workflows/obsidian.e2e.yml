name: Obsidian E2E Test

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  e2e-test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            %LOCALAPPDATA%/ms-playwright  # Windows
            ~/Library/Caches/ms-playwright # macOS

          key: ${{ runner.os }}-playwright-chromium-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-chromium-

      - name: Install Playwright
        run: pnpm playwright install chromium

      - name: Cache jq (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        id: jq-cache
        with:
          path: jq.exe
          key: jq-win64-latest

      - name: Install and setup jq (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          if [[ ! -f "jq.exe" ]]; then
            echo "jq not found in cache. Downloading..."
            curl -L -o jq.exe https://github.com/jqlang/jq/releases/latest/download/jq-win64.exe
          else
            echo "jq found in cache."
          fi
          # jq.exeがあるカレントディレクトリをPATHに追加します
          echo "${{ github.workspace }}" >> $GITHUB_PATH

      - name: PWD # For debugging purposes
        shell: bash
        run: |
          pwd

      - name: List project files # For debugging purposes
        shell: bash
        run: |
          npx @telosh/filetree --exclude node_modules,.git

      - name: Prepare E2E test environment
        shell: bash
        run: |
          chmod +x e2e/setup.sh
          ./e2e/setup.sh

      - name: List project files # For debugging purposes
        shell: bash
        run: |
          npx @telosh/filetree --exclude node_modules,.git

      - name: Run Playwright example tests
        run: pnpm run test:e2e:example
        env:
          DEBUG: "pw:browser"
      - name: Run Playwright minimal main test
        run: pnpm run test:e2e:minimal-main
        env:
          DEBUG: "pw:browser"

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.os }}
          path: playwright-report/
          retention-days: 30
